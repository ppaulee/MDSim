// Not copyrighted - public domain.
//
// This sample parser implementation was generated by CodeSynthesis XSD,
// an XML Schema to C++ data binding compiler. You may use it in your
// programs without any restrictions.
//

#include "MolSim-pimpl.h"

// input_file_pimpl
//

void input_file_pimpl::
pre ()
{
}

void input_file_pimpl::
post_input_file ()
{
  const ::std::string& v (post_string ());

  // TODO
  this->input_file = v;
  //
}

std::string input_file_pimpl::get_input_file() {
    return input_file;
}

// delta_t_pimpl
//

void delta_t_pimpl::
pre ()
{
}

void delta_t_pimpl::
post_delta_t ()
{
  double v (post_double ());

  // TODO
  delta_t = v;
  //
}

double& delta_t_pimpl::get_delta_t() {
    return delta_t;
}

// end_time_pimpl
//

void end_time_pimpl::
pre ()
{
}

void end_time_pimpl::
post_end_time ()
{
  double v (post_double ());

  // TODO
  end_time = v;
  //
}

double& end_time_pimpl::get_end_time() {
    return end_time;
}
// output_step_pimpl
//

void output_step_pimpl::
pre ()
{
}

void output_step_pimpl::
post_output_step ()
{
  int v (post_int ());

  // TODO
  output_step = v;

  //
}

int& output_step_pimpl::get_output_step() {
    return output_step;
}
// algorithm_pimpl
//

void algorithm_pimpl::
pre ()
{
}

void algorithm_pimpl::
post_algorithm ()
{
  const ::std::string& v (post_string ());

  // TODO
  algorithm = v;
  //
}

std::string algorithm_pimpl::get_algorithm() {
    return algorithm;
}
// benchmark_pimpl
//

void benchmark_pimpl::
pre ()
{
}

void benchmark_pimpl::
post_benchmark ()
{
  const ::std::string& v (post_string ());

  // TODO
  benchmark = v;
  //
}
std::string benchmark_pimpl::get_benchmark() {
    return benchmark;
}

// molsim_pimpl
//

void molsim_pimpl::
pre ()
{
}

void molsim_pimpl::
input_file ()
{
}

void molsim_pimpl::
delta_t ()
{
}

void molsim_pimpl::
end_time ()
{
}

void molsim_pimpl::
output_step ()
{
}

void molsim_pimpl::
algorithm ()
{
}

void molsim_pimpl::
benchmark ()
{
}

void molsim_pimpl::
post_molsim ()
{
}

